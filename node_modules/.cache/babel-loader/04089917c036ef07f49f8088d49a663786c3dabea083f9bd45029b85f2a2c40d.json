{"ast":null,"code":"import _defineProperty from \"D:/OJ/foreveroj-front/foreveroj-front/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"D:/OJ/foreveroj-front/foreveroj-front/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"D:/OJ/foreveroj-front/foreveroj-front/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"D:/OJ/foreveroj-front/foreveroj-front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.fixed.js\";\nimport { isUndefined, isArray, isNull } from \"../_utils/is.js\";\nimport \"vue\";\nvar getDataColumnsNumber = function getDataColumnsNumber(columns) {\n  var count = 0;\n  var _travelColumns = function travelColumns(columns2) {\n    if (isArray(columns2) && columns2.length > 0) {\n      var _iterator = _createForOfIteratorHelper(columns2),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n          if (!item.children) {\n            count += 1;\n          } else {\n            _travelColumns(item.children);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  };\n  _travelColumns(columns);\n  return count;\n};\nvar _getTotalHeaderRows = function getTotalHeaderRows(columns) {\n  var count = 0;\n  if (isArray(columns) && columns.length > 0) {\n    count = 1;\n    var _iterator2 = _createForOfIteratorHelper(columns),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var item = _step2.value;\n        if (item.children) {\n          var depth = _getTotalHeaderRows(item.children);\n          if (depth > 0) {\n            count = Math.max(count, depth + 1);\n          }\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n  return count;\n};\nvar setParentFixed = function setParentFixed(column, fixed) {\n  var parent = column.parent;\n  while (parent) {\n    if (parent.fixed === fixed) {\n      if (fixed === \"left\") {\n        parent.isLastLeftFixed = true;\n      } else {\n        parent.isFirstRightFixed = true;\n      }\n    }\n    parent = parent.parent;\n  }\n};\nvar getGroupColumns = function getGroupColumns(columns, columnMap, columnWidth) {\n  var totalHeaderRows = _getTotalHeaderRows(columns);\n  columnMap.clear();\n  var dataColumns = [];\n  var groupColumns = _toConsumableArray(Array(totalHeaderRows)).map(function () {\n    return [];\n  });\n  var lastLeftFixedIndex;\n  var firstRightFixedIndex;\n  var _travelColumns2 = function travelColumns(columns2) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$level = _ref.level,\n      level = _ref$level === void 0 ? 0 : _ref$level,\n      parent = _ref.parent,\n      fixed = _ref.fixed;\n    var _a;\n    var _iterator3 = _createForOfIteratorHelper(columns2),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var item = _step3.value;\n        var cell = _objectSpread(_objectSpread({}, item), {}, {\n          parent: parent\n        });\n        if (isArray(cell.children)) {\n          var colSpan = getDataColumnsNumber(cell.children);\n          if (colSpan > 1) {\n            cell.colSpan = colSpan;\n          }\n          groupColumns[level].push(cell);\n          _travelColumns2(cell.children, {\n            level: level + 1,\n            parent: cell,\n            fixed: cell.fixed\n          });\n        } else {\n          var rowSpan = totalHeaderRows - level;\n          if (rowSpan > 1) {\n            cell.rowSpan = rowSpan;\n          }\n          if (fixed || cell.fixed) {\n            cell.fixed = (_a = cell.fixed) != null ? _a : fixed;\n            if (cell.fixed === \"left\") {\n              lastLeftFixedIndex = dataColumns.length;\n            } else if (isUndefined(firstRightFixedIndex)) {\n              firstRightFixedIndex = dataColumns.length;\n            }\n          }\n          if (isUndefined(cell.dataIndex) || isNull(cell.dataIndex)) {\n            cell.dataIndex = \"__arco_data_index_\".concat(dataColumns.length);\n          }\n          if (columnWidth[cell.dataIndex]) {\n            cell._resizeWidth = columnWidth[cell.dataIndex];\n          }\n          columnMap.set(cell.dataIndex, cell);\n          dataColumns.push(cell);\n          groupColumns[level].push(cell);\n        }\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  };\n  _travelColumns2(columns);\n  if (!isUndefined(lastLeftFixedIndex)) {\n    dataColumns[lastLeftFixedIndex].isLastLeftFixed = true;\n    setParentFixed(dataColumns[lastLeftFixedIndex], \"left\");\n  }\n  if (!isUndefined(firstRightFixedIndex)) {\n    dataColumns[firstRightFixedIndex].isFirstRightFixed = true;\n    setParentFixed(dataColumns[firstRightFixedIndex], \"right\");\n  }\n  return {\n    dataColumns: dataColumns,\n    groupColumns: groupColumns\n  };\n};\nvar getOperationColumnIndex = function getOperationColumnIndex(operations, name) {\n  for (var i = 0; i < operations.length; i++) {\n    if (operations[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\nvar getOperationFixedNumber = function getOperationFixedNumber(column, operations) {\n  var _a;\n  var index = getOperationColumnIndex(operations, column.name);\n  if (index <= 0) {\n    return 0;\n  }\n  var count = 0;\n  var _operations = operations.slice(0, index);\n  var _iterator4 = _createForOfIteratorHelper(_operations),\n    _step4;\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var item = _step4.value;\n      count += (_a = item.width) != null ? _a : 0;\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n  return count;\n};\nvar _getFirstDataColumn = function getFirstDataColumn(column) {\n  if (column.children && column.children.length > 0) return _getFirstDataColumn(column.children[0]);\n  return column;\n};\nvar getLastDataColumn = function getLastDataColumn(column) {\n  if (column.children && column.children.length > 0) return _getFirstDataColumn(column.children[column.children.length - 1]);\n  return column;\n};\nvar getFixedNumber = function getFixedNumber(column, _ref2) {\n  var dataColumns = _ref2.dataColumns,\n    operations = _ref2.operations;\n  var _a, _b, _c;\n  var count = 0;\n  if (column.fixed === \"left\") {\n    var _iterator5 = _createForOfIteratorHelper(operations),\n      _step5;\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var item = _step5.value;\n        count += (_a = item.width) != null ? _a : 40;\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n    var first = _getFirstDataColumn(column);\n    var _iterator6 = _createForOfIteratorHelper(dataColumns),\n      _step6;\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var _item = _step6.value;\n        if (first.dataIndex === _item.dataIndex) {\n          break;\n        }\n        count += (_c = (_b = _item._resizeWidth) != null ? _b : _item.width) != null ? _c : 0;\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n    return count;\n  }\n  var last = getLastDataColumn(column);\n  for (var i = dataColumns.length - 1; i > 0; i--) {\n    var _item2 = dataColumns[i];\n    if (last.dataIndex === _item2.dataIndex) {\n      break;\n    }\n    if (_item2.fixed === \"right\") {\n      count += _item2.width;\n    }\n  }\n  return count;\n};\nvar getOperationFixedCls = function getOperationFixedCls(prefixCls, column) {\n  if (column.fixed) {\n    return [\"\".concat(prefixCls, \"-col-fixed-left\"), _defineProperty({}, \"\".concat(prefixCls, \"-col-fixed-left-last\"), column.isLastLeftFixed)];\n  }\n  return [];\n};\nvar getFixedCls = function getFixedCls(prefixCls, column) {\n  if (column.fixed === \"left\") {\n    return [\"\".concat(prefixCls, \"-col-fixed-left\"), _defineProperty({}, \"\".concat(prefixCls, \"-col-fixed-left-last\"), column.isLastLeftFixed)];\n  }\n  if (column.fixed === \"right\") {\n    return [\"\".concat(prefixCls, \"-col-fixed-right\"), _defineProperty({}, \"\".concat(prefixCls, \"-col-fixed-right-first\"), column.isFirstRightFixed)];\n  }\n  return [];\n};\nvar getStyle = function getStyle(column, _ref6) {\n  var dataColumns = _ref6.dataColumns,\n    operations = _ref6.operations;\n  if (column.fixed) {\n    var offset = \"\".concat(getFixedNumber(column, {\n      dataColumns: dataColumns,\n      operations: operations\n    }), \"px\");\n    if (column.fixed === \"left\") {\n      return {\n        left: offset\n      };\n    }\n    return {\n      right: offset\n    };\n  }\n  return {};\n};\nvar getOperationStyle = function getOperationStyle(column, operations) {\n  if (column.fixed) {\n    return {\n      left: \"\".concat(getOperationFixedNumber(column, operations), \"px\")\n    };\n  }\n  return {};\n};\nfunction mapArrayWithChildren(arr) {\n  return arr.map(function (item) {\n    var newItem = _objectSpread({}, item);\n    if (newItem.children) {\n      newItem.children = mapArrayWithChildren(newItem.children);\n    }\n    return newItem;\n  });\n}\nfunction mapRawTableData(arr) {\n  return arr.map(function (item) {\n    var rawItem = item.raw;\n    if (item.children && rawItem.children) {\n      rawItem.children = mapRawTableData(item.children);\n    }\n    return item.raw;\n  });\n}\nvar _getLeafKeys = function getLeafKeys(record) {\n  var keys = [];\n  if (record.children) {\n    var _iterator7 = _createForOfIteratorHelper(record.children),\n      _step7;\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var item = _step7.value;\n        if (item.isLeaf) {\n          keys.push(item.key);\n        } else {\n          keys.push.apply(keys, _toConsumableArray(_getLeafKeys(item)));\n        }\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n  }\n  return keys;\n};\nvar getSelectionStatus = function getSelectionStatus(selectedRowKeys, leafKeys) {\n  var checked = false;\n  var indeterminate = false;\n  var selectedLeafKeys = leafKeys.filter(function (key) {\n    return selectedRowKeys.includes(key);\n  });\n  if (selectedLeafKeys.length > 0) {\n    if (selectedLeafKeys.length >= leafKeys.length) {\n      checked = true;\n    } else {\n      indeterminate = true;\n    }\n  }\n  return {\n    checked: checked,\n    indeterminate: indeterminate\n  };\n};\nexport { getFixedCls, getFixedNumber, getGroupColumns, _getLeafKeys as getLeafKeys, getOperationFixedCls, getOperationFixedNumber, getOperationStyle, getSelectionStatus, getStyle, mapArrayWithChildren, mapRawTableData };","map":{"version":3,"names":["isUndefined","isArray","isNull","getDataColumnsNumber","columns","count","travelColumns","columns2","length","_iterator","_createForOfIteratorHelper","_step","s","n","done","item","value","children","err","e","f","getTotalHeaderRows","_iterator2","_step2","depth","Math","max","setParentFixed","column","fixed","parent","isLastLeftFixed","isFirstRightFixed","getGroupColumns","columnMap","columnWidth","totalHeaderRows","clear","dataColumns","groupColumns","_toConsumableArray","Array","map","lastLeftFixedIndex","firstRightFixedIndex","_ref","arguments","undefined","_ref$level","level","_a","_iterator3","_step3","cell","_objectSpread","colSpan","push","rowSpan","dataIndex","concat","_resizeWidth","set","getOperationColumnIndex","operations","name","i","getOperationFixedNumber","index","_operations","slice","_iterator4","_step4","width","getFirstDataColumn","getLastDataColumn","getFixedNumber","_ref2","_b","_c","_iterator5","_step5","first","_iterator6","_step6","last","getOperationFixedCls","prefixCls","_defineProperty","getFixedCls","getStyle","_ref6","offset","left","right","getOperationStyle","mapArrayWithChildren","arr","newItem","mapRawTableData","rawItem","raw","getLeafKeys","record","keys","_iterator7","_step7","isLeaf","key","apply","getSelectionStatus","selectedRowKeys","leafKeys","checked","indeterminate","selectedLeafKeys","filter","includes"],"sources":["D:/OJ/foreveroj-front/foreveroj-front/node_modules/@arco-design/web-vue/es/table/utils.js"],"sourcesContent":["import { isUndefined, isArray, isNull } from \"../_utils/is.js\";\nimport \"vue\";\nconst getDataColumnsNumber = (columns) => {\n  let count = 0;\n  const travelColumns = (columns2) => {\n    if (isArray(columns2) && columns2.length > 0) {\n      for (const item of columns2) {\n        if (!item.children) {\n          count += 1;\n        } else {\n          travelColumns(item.children);\n        }\n      }\n    }\n  };\n  travelColumns(columns);\n  return count;\n};\nconst getTotalHeaderRows = (columns) => {\n  let count = 0;\n  if (isArray(columns) && columns.length > 0) {\n    count = 1;\n    for (const item of columns) {\n      if (item.children) {\n        const depth = getTotalHeaderRows(item.children);\n        if (depth > 0) {\n          count = Math.max(count, depth + 1);\n        }\n      }\n    }\n  }\n  return count;\n};\nconst setParentFixed = (column, fixed) => {\n  let { parent } = column;\n  while (parent) {\n    if (parent.fixed === fixed) {\n      if (fixed === \"left\") {\n        parent.isLastLeftFixed = true;\n      } else {\n        parent.isFirstRightFixed = true;\n      }\n    }\n    parent = parent.parent;\n  }\n};\nconst getGroupColumns = (columns, columnMap, columnWidth) => {\n  const totalHeaderRows = getTotalHeaderRows(columns);\n  columnMap.clear();\n  const dataColumns = [];\n  const groupColumns = [...Array(totalHeaderRows)].map(\n    () => []\n  );\n  let lastLeftFixedIndex;\n  let firstRightFixedIndex;\n  const travelColumns = (columns2, {\n    level = 0,\n    parent,\n    fixed\n  } = {}) => {\n    var _a;\n    for (const item of columns2) {\n      const cell = { ...item, parent };\n      if (isArray(cell.children)) {\n        const colSpan = getDataColumnsNumber(cell.children);\n        if (colSpan > 1) {\n          cell.colSpan = colSpan;\n        }\n        groupColumns[level].push(cell);\n        travelColumns(cell.children, {\n          level: level + 1,\n          parent: cell,\n          fixed: cell.fixed\n        });\n      } else {\n        const rowSpan = totalHeaderRows - level;\n        if (rowSpan > 1) {\n          cell.rowSpan = rowSpan;\n        }\n        if (fixed || cell.fixed) {\n          cell.fixed = (_a = cell.fixed) != null ? _a : fixed;\n          if (cell.fixed === \"left\") {\n            lastLeftFixedIndex = dataColumns.length;\n          } else if (isUndefined(firstRightFixedIndex)) {\n            firstRightFixedIndex = dataColumns.length;\n          }\n        }\n        if (isUndefined(cell.dataIndex) || isNull(cell.dataIndex)) {\n          cell.dataIndex = `__arco_data_index_${dataColumns.length}`;\n        }\n        if (columnWidth[cell.dataIndex]) {\n          cell._resizeWidth = columnWidth[cell.dataIndex];\n        }\n        columnMap.set(cell.dataIndex, cell);\n        dataColumns.push(cell);\n        groupColumns[level].push(cell);\n      }\n    }\n  };\n  travelColumns(columns);\n  if (!isUndefined(lastLeftFixedIndex)) {\n    dataColumns[lastLeftFixedIndex].isLastLeftFixed = true;\n    setParentFixed(dataColumns[lastLeftFixedIndex], \"left\");\n  }\n  if (!isUndefined(firstRightFixedIndex)) {\n    dataColumns[firstRightFixedIndex].isFirstRightFixed = true;\n    setParentFixed(dataColumns[firstRightFixedIndex], \"right\");\n  }\n  return { dataColumns, groupColumns };\n};\nconst getOperationColumnIndex = (operations, name) => {\n  for (let i = 0; i < operations.length; i++) {\n    if (operations[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\nconst getOperationFixedNumber = (column, operations) => {\n  var _a;\n  const index = getOperationColumnIndex(operations, column.name);\n  if (index <= 0) {\n    return 0;\n  }\n  let count = 0;\n  const _operations = operations.slice(0, index);\n  for (const item of _operations) {\n    count += (_a = item.width) != null ? _a : 0;\n  }\n  return count;\n};\nconst getFirstDataColumn = (column) => {\n  if (column.children && column.children.length > 0)\n    return getFirstDataColumn(column.children[0]);\n  return column;\n};\nconst getLastDataColumn = (column) => {\n  if (column.children && column.children.length > 0)\n    return getFirstDataColumn(column.children[column.children.length - 1]);\n  return column;\n};\nconst getFixedNumber = (column, {\n  dataColumns,\n  operations\n}) => {\n  var _a, _b, _c;\n  let count = 0;\n  if (column.fixed === \"left\") {\n    for (const item of operations) {\n      count += (_a = item.width) != null ? _a : 40;\n    }\n    const first = getFirstDataColumn(column);\n    for (const item of dataColumns) {\n      if (first.dataIndex === item.dataIndex) {\n        break;\n      }\n      count += (_c = (_b = item._resizeWidth) != null ? _b : item.width) != null ? _c : 0;\n    }\n    return count;\n  }\n  const last = getLastDataColumn(column);\n  for (let i = dataColumns.length - 1; i > 0; i--) {\n    const item = dataColumns[i];\n    if (last.dataIndex === item.dataIndex) {\n      break;\n    }\n    if (item.fixed === \"right\") {\n      count += item.width;\n    }\n  }\n  return count;\n};\nconst getOperationFixedCls = (prefixCls, column) => {\n  if (column.fixed) {\n    return [\n      `${prefixCls}-col-fixed-left`,\n      {\n        [`${prefixCls}-col-fixed-left-last`]: column.isLastLeftFixed\n      }\n    ];\n  }\n  return [];\n};\nconst getFixedCls = (prefixCls, column) => {\n  if (column.fixed === \"left\") {\n    return [\n      `${prefixCls}-col-fixed-left`,\n      {\n        [`${prefixCls}-col-fixed-left-last`]: column.isLastLeftFixed\n      }\n    ];\n  }\n  if (column.fixed === \"right\") {\n    return [\n      `${prefixCls}-col-fixed-right`,\n      {\n        [`${prefixCls}-col-fixed-right-first`]: column.isFirstRightFixed\n      }\n    ];\n  }\n  return [];\n};\nconst getStyle = (column, {\n  dataColumns,\n  operations\n}) => {\n  if (column.fixed) {\n    const offset = `${getFixedNumber(column, { dataColumns, operations })}px`;\n    if (column.fixed === \"left\") {\n      return {\n        left: offset\n      };\n    }\n    return {\n      right: offset\n    };\n  }\n  return {};\n};\nconst getOperationStyle = (column, operations) => {\n  if (column.fixed) {\n    return {\n      left: `${getOperationFixedNumber(column, operations)}px`\n    };\n  }\n  return {};\n};\nfunction mapArrayWithChildren(arr) {\n  return arr.map((item) => {\n    const newItem = { ...item };\n    if (newItem.children) {\n      newItem.children = mapArrayWithChildren(newItem.children);\n    }\n    return newItem;\n  });\n}\nfunction mapRawTableData(arr) {\n  return arr.map((item) => {\n    const rawItem = item.raw;\n    if (item.children && rawItem.children) {\n      rawItem.children = mapRawTableData(item.children);\n    }\n    return item.raw;\n  });\n}\nconst getLeafKeys = (record) => {\n  const keys = [];\n  if (record.children) {\n    for (const item of record.children) {\n      if (item.isLeaf) {\n        keys.push(item.key);\n      } else {\n        keys.push(...getLeafKeys(item));\n      }\n    }\n  }\n  return keys;\n};\nconst getSelectionStatus = (selectedRowKeys, leafKeys) => {\n  let checked = false;\n  let indeterminate = false;\n  const selectedLeafKeys = leafKeys.filter(\n    (key) => selectedRowKeys.includes(key)\n  );\n  if (selectedLeafKeys.length > 0) {\n    if (selectedLeafKeys.length >= leafKeys.length) {\n      checked = true;\n    } else {\n      indeterminate = true;\n    }\n  }\n  return {\n    checked,\n    indeterminate\n  };\n};\nexport { getFixedCls, getFixedNumber, getGroupColumns, getLeafKeys, getOperationFixedCls, getOperationFixedNumber, getOperationStyle, getSelectionStatus, getStyle, mapArrayWithChildren, mapRawTableData };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}