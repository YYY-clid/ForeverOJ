{"ast":null,"code":"import _defineProperty from \"D:/OJ/foreveroj-front/foreveroj-front/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"D:/OJ/foreveroj-front/foreveroj-front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"D:/OJ/foreveroj-front/foreveroj-front/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport { defineComponent, toRefs, computed, createVNode } from \"vue\";\nimport { getPrefixCls } from \"../_utils/global-config.js\";\nvar COLORS = [\"red\", \"orangered\", \"orange\", \"gold\", \"lime\", \"green\", \"cyan\", \"arcoblue\", \"purple\", \"pinkpurple\", \"magenta\", \"gray\"];\nvar BADGE_STATUSES = [\"normal\", \"processing\", \"success\", \"warning\", \"danger\"];\nvar _Badge = defineComponent({\n  name: \"Badge\",\n  props: {\n    text: {\n      type: String\n    },\n    dot: {\n      type: Boolean\n    },\n    dotStyle: {\n      type: Object\n    },\n    maxCount: {\n      type: Number,\n      \"default\": 99\n    },\n    offset: {\n      type: Array,\n      \"default\": function _default() {\n        return [];\n      }\n    },\n    color: {\n      type: String\n    },\n    status: {\n      type: String,\n      validator: function validator(value) {\n        return BADGE_STATUSES.includes(value);\n      }\n    },\n    count: {\n      type: Number\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var _toRefs = toRefs(props),\n      status = _toRefs.status,\n      color = _toRefs.color,\n      dotStyle = _toRefs.dotStyle,\n      offset = _toRefs.offset,\n      text = _toRefs.text,\n      dot = _toRefs.dot,\n      maxCount = _toRefs.maxCount,\n      count = _toRefs.count;\n    var prefixCls = getPrefixCls(\"badge\");\n    var wrapperClassName = useWrapperClass(prefixCls, status == null ? void 0 : status.value, slots == null ? void 0 : slots[\"default\"]);\n    var computedStyleRef = computed(function () {\n      var computedDotStyle = _objectSpread({}, (dotStyle == null ? void 0 : dotStyle.value) || {});\n      var _ref2 = (offset == null ? void 0 : offset.value) || [],\n        _ref3 = _slicedToArray(_ref2, 2),\n        leftOffset = _ref3[0],\n        topOffset = _ref3[1];\n      if (leftOffset) {\n        computedDotStyle.marginRight = \"\".concat(-leftOffset, \"px\");\n      }\n      if (topOffset) {\n        computedDotStyle.marginTop = \"\".concat(topOffset, \"px\");\n      }\n      var computedColorStyle = !(color == null ? void 0 : color.value) || COLORS.includes(color == null ? void 0 : color.value) ? {} : {\n        backgroundColor: color.value\n      };\n      var mergedStyle = _objectSpread(_objectSpread({}, computedColorStyle), computedDotStyle);\n      return {\n        mergedStyle: mergedStyle,\n        computedDotStyle: computedDotStyle,\n        computedColorStyle: computedColorStyle\n      };\n    });\n    var getDot = function getDot() {\n      var textValue = text == null ? void 0 : text.value;\n      var colorValue = color == null ? void 0 : color.value;\n      var statusValue = status == null ? void 0 : status.value;\n      var dotValue = dot == null ? void 0 : dot.value;\n      var countValue = Number(count == null ? void 0 : count.value);\n      var hasCount = (count == null ? void 0 : count.value) != null;\n      var _computedStyleRef$val = computedStyleRef.value,\n        computedDotStyle = _computedStyleRef$val.computedDotStyle,\n        mergedStyle = _computedStyleRef$val.mergedStyle;\n      if (slots.content) {\n        return createVNode(\"span\", {\n          \"class\": \"\".concat(prefixCls, \"-custom-dot\"),\n          \"style\": computedDotStyle\n        }, [slots.content()]);\n      }\n      if (textValue && !colorValue && !statusValue) {\n        return createVNode(\"span\", {\n          \"class\": \"\".concat(prefixCls, \"-text\"),\n          \"style\": computedDotStyle\n        }, [textValue]);\n      }\n      if (statusValue || colorValue && !hasCount) {\n        return createVNode(\"span\", {\n          \"class\": \"\".concat(prefixCls, \"-status-wrapper\")\n        }, [createVNode(\"span\", {\n          \"class\": [\"\".concat(prefixCls, \"-status-dot\"), _defineProperty(_defineProperty({}, \"\".concat(prefixCls, \"-status-\").concat(statusValue), statusValue), \"\".concat(prefixCls, \"-color-\").concat(colorValue), colorValue)],\n          \"style\": mergedStyle\n        }, null), textValue && createVNode(\"span\", {\n          \"class\": \"\".concat(prefixCls, \"-status-text\")\n        }, [textValue])]);\n      }\n      if ((dotValue || colorValue) && countValue > 0) {\n        return createVNode(\"span\", {\n          \"class\": [\"\".concat(prefixCls, \"-dot\"), _defineProperty({}, \"\".concat(prefixCls, \"-color-\").concat(colorValue), colorValue)],\n          \"style\": mergedStyle\n        }, null);\n      }\n      if (countValue === 0) {\n        return null;\n      }\n      return createVNode(\"span\", {\n        \"class\": \"\".concat(prefixCls, \"-number\"),\n        \"style\": mergedStyle\n      }, [createVNode(\"span\", null, [maxCount.value && countValue > maxCount.value ? \"\".concat(maxCount.value, \"+\") : countValue])]);\n    };\n    return function () {\n      return createVNode(\"span\", {\n        \"class\": wrapperClassName.value\n      }, [slots[\"default\"] && slots[\"default\"](), getDot()]);\n    };\n  }\n});\nvar useWrapperClass = function useWrapperClass(prefixCls, status, children) {\n  return computed(function () {\n    return [prefixCls, _defineProperty(_defineProperty({}, \"\".concat(prefixCls, \"-status\"), status), \"\".concat(prefixCls, \"-no-children\"), !children)];\n  });\n};\nexport { BADGE_STATUSES, COLORS, _Badge as default };","map":{"version":3,"names":["defineComponent","toRefs","computed","createVNode","getPrefixCls","COLORS","BADGE_STATUSES","_Badge","name","props","text","type","String","dot","Boolean","dotStyle","Object","maxCount","Number","offset","Array","default","color","status","validator","value","includes","count","setup","_ref","slots","_toRefs","prefixCls","wrapperClassName","useWrapperClass","computedStyleRef","computedDotStyle","_objectSpread","_ref2","_ref3","_slicedToArray","leftOffset","topOffset","marginRight","concat","marginTop","computedColorStyle","backgroundColor","mergedStyle","getDot","textValue","colorValue","statusValue","dotValue","countValue","hasCount","_computedStyleRef$val","content","_defineProperty","children"],"sources":["D:/OJ/foreveroj-front/foreveroj-front/node_modules/@arco-design/web-vue/es/badge/badge.js"],"sourcesContent":["import { defineComponent, toRefs, computed, createVNode } from \"vue\";\nimport { getPrefixCls } from \"../_utils/global-config.js\";\nconst COLORS = [\"red\", \"orangered\", \"orange\", \"gold\", \"lime\", \"green\", \"cyan\", \"arcoblue\", \"purple\", \"pinkpurple\", \"magenta\", \"gray\"];\nconst BADGE_STATUSES = [\"normal\", \"processing\", \"success\", \"warning\", \"danger\"];\nvar _Badge = defineComponent({\n  name: \"Badge\",\n  props: {\n    text: {\n      type: String\n    },\n    dot: {\n      type: Boolean\n    },\n    dotStyle: {\n      type: Object\n    },\n    maxCount: {\n      type: Number,\n      default: 99\n    },\n    offset: {\n      type: Array,\n      default: () => []\n    },\n    color: {\n      type: String\n    },\n    status: {\n      type: String,\n      validator: (value) => {\n        return BADGE_STATUSES.includes(value);\n      }\n    },\n    count: {\n      type: Number\n    }\n  },\n  setup(props, {\n    slots\n  }) {\n    const {\n      status,\n      color,\n      dotStyle,\n      offset,\n      text,\n      dot,\n      maxCount,\n      count\n    } = toRefs(props);\n    const prefixCls = getPrefixCls(\"badge\");\n    const wrapperClassName = useWrapperClass(prefixCls, status == null ? void 0 : status.value, slots == null ? void 0 : slots.default);\n    const computedStyleRef = computed(() => {\n      const computedDotStyle = {\n        ...(dotStyle == null ? void 0 : dotStyle.value) || {}\n      };\n      const [leftOffset, topOffset] = (offset == null ? void 0 : offset.value) || [];\n      if (leftOffset) {\n        computedDotStyle.marginRight = `${-leftOffset}px`;\n      }\n      if (topOffset) {\n        computedDotStyle.marginTop = `${topOffset}px`;\n      }\n      const computedColorStyle = !(color == null ? void 0 : color.value) || COLORS.includes(color == null ? void 0 : color.value) ? {} : {\n        backgroundColor: color.value\n      };\n      const mergedStyle = {\n        ...computedColorStyle,\n        ...computedDotStyle\n      };\n      return {\n        mergedStyle,\n        computedDotStyle,\n        computedColorStyle\n      };\n    });\n    const getDot = () => {\n      const textValue = text == null ? void 0 : text.value;\n      const colorValue = color == null ? void 0 : color.value;\n      const statusValue = status == null ? void 0 : status.value;\n      const dotValue = dot == null ? void 0 : dot.value;\n      const countValue = Number(count == null ? void 0 : count.value);\n      const hasCount = (count == null ? void 0 : count.value) != null;\n      const {\n        computedDotStyle,\n        mergedStyle\n      } = computedStyleRef.value;\n      if (slots.content) {\n        return createVNode(\"span\", {\n          \"class\": `${prefixCls}-custom-dot`,\n          \"style\": computedDotStyle\n        }, [slots.content()]);\n      }\n      if (textValue && !colorValue && !statusValue) {\n        return createVNode(\"span\", {\n          \"class\": `${prefixCls}-text`,\n          \"style\": computedDotStyle\n        }, [textValue]);\n      }\n      if (statusValue || colorValue && !hasCount) {\n        return createVNode(\"span\", {\n          \"class\": `${prefixCls}-status-wrapper`\n        }, [createVNode(\"span\", {\n          \"class\": [`${prefixCls}-status-dot`, {\n            [`${prefixCls}-status-${statusValue}`]: statusValue,\n            [`${prefixCls}-color-${colorValue}`]: colorValue\n          }],\n          \"style\": mergedStyle\n        }, null), textValue && createVNode(\"span\", {\n          \"class\": `${prefixCls}-status-text`\n        }, [textValue])]);\n      }\n      if ((dotValue || colorValue) && countValue > 0) {\n        return createVNode(\"span\", {\n          \"class\": [`${prefixCls}-dot`, {\n            [`${prefixCls}-color-${colorValue}`]: colorValue\n          }],\n          \"style\": mergedStyle\n        }, null);\n      }\n      if (countValue === 0) {\n        return null;\n      }\n      return createVNode(\"span\", {\n        \"class\": `${prefixCls}-number`,\n        \"style\": mergedStyle\n      }, [createVNode(\"span\", null, [maxCount.value && countValue > maxCount.value ? `${maxCount.value}+` : countValue])]);\n    };\n    return () => {\n      return createVNode(\"span\", {\n        \"class\": wrapperClassName.value\n      }, [slots.default && slots.default(), getDot()]);\n    };\n  }\n});\nconst useWrapperClass = (prefixCls, status, children) => {\n  return computed(() => [prefixCls, {\n    [`${prefixCls}-status`]: status,\n    [`${prefixCls}-no-children`]: !children\n  }]);\n};\nexport { BADGE_STATUSES, COLORS, _Badge as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}