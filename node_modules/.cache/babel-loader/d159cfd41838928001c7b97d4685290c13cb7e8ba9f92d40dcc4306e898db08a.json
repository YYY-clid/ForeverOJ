{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { ref, onMounted, watch } from 'vue';\nimport * as echarts from 'echarts';\nexport default {\n  __name: 'Chart',\n  props: {\n    chartData: {\n      type: Array,\n      required: true\n    }\n  },\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var props = __props;\n    var chart = ref(null);\n    var chartInstance = null;\n    var initChart = function initChart() {\n      if (chart.value) {\n        chartInstance = echarts.init(chart.value);\n        updateChart();\n      }\n    };\n    var updateChart = function updateChart() {\n      if (chartInstance && props.chartData.length) {\n        var dates = props.chartData.map(function (item) {\n          return item.date;\n        });\n        var solvedCounts = props.chartData.map(function (item) {\n          return item.solved;\n        });\n        var option = {\n          title: {\n            text: '每日做题数量'\n          },\n          tooltip: {\n            trigger: 'axis'\n          },\n          xAxis: {\n            type: 'category',\n            data: dates\n          },\n          yAxis: {\n            type: 'value'\n          },\n          series: [{\n            name: '解决题目数',\n            type: 'line',\n            data: solvedCounts\n          }]\n        };\n        chartInstance.setOption(option);\n      }\n    };\n    onMounted(function () {\n      initChart();\n    });\n    watch(function () {\n      return props.chartData;\n    }, function () {\n      updateChart();\n    });\n    var __returned__ = {\n      props: props,\n      chart: chart,\n      get chartInstance() {\n        return chartInstance;\n      },\n      set chartInstance(v) {\n        chartInstance = v;\n      },\n      initChart: initChart,\n      updateChart: updateChart,\n      ref: ref,\n      onMounted: onMounted,\n      watch: watch,\n      get echarts() {\n        return echarts;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","echarts","props","__props","chart","chartInstance","initChart","value","init","updateChart","chartData","length","dates","map","item","date","solvedCounts","solved","option","title","text","tooltip","trigger","xAxis","type","data","yAxis","series","name","setOption"],"sources":["D:/OJ/foreveroj-front/foreveroj-front/src/components/Chart.vue"],"sourcesContent":["<template>\r\n    <div ref=\"chart\" style=\"width: 100%; height: 400px;\"></div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, onMounted, watch } from 'vue';\r\n  import * as echarts from 'echarts';\r\n  \r\n  const props = defineProps({\r\n    chartData: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  });\r\n  \r\n  const chart = ref(null);\r\n  let chartInstance = null;\r\n  \r\n  const initChart = () => {\r\n    if (chart.value) {\r\n      chartInstance = echarts.init(chart.value);\r\n      updateChart();\r\n    }\r\n  };\r\n  \r\n  const updateChart = () => {\r\n    if (chartInstance && props.chartData.length) {\r\n      const dates = props.chartData.map(item => item.date);\r\n      const solvedCounts = props.chartData.map(item => item.solved);\r\n  \r\n      const option = {\r\n        title: {\r\n          text: '每日做题数量'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: dates\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: '解决题目数',\r\n            type: 'line',\r\n            data: solvedCounts\r\n          }\r\n        ]\r\n      };\r\n  \r\n      chartInstance.setOption(option);\r\n    }\r\n  };\r\n  \r\n  onMounted(() => {\r\n    initChart();\r\n  });\r\n  \r\n  watch(() => props.chartData, () => {\r\n    updateChart();\r\n  });\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* 根据需要添加样式 */\r\n  </style>\r\n  "],"mappings":";;;;;AAKE,SAASA,GAAG,EAAEC,SAAS,EAAEC,KAAK,QAAQ,KAAK;AAC3C,OAAO,KAAKC,OAAO,MAAM,SAAS;;;;;;;;;;;;IAElC,IAAMC,KAAK,GAAGC,OAKZ;IAEF,IAAMC,KAAK,GAAGN,GAAG,CAAC,IAAI,CAAC;IACvB,IAAIO,aAAa,GAAG,IAAI;IAExB,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;MACtB,IAAIF,KAAK,CAACG,KAAK,EAAE;QACfF,aAAa,GAAGJ,OAAO,CAACO,IAAI,CAACJ,KAAK,CAACG,KAAK,CAAC;QACzCE,WAAW,CAAC,CAAC;MACf;IACF,CAAC;IAED,IAAMA,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;MACxB,IAAIJ,aAAa,IAAIH,KAAK,CAACQ,SAAS,CAACC,MAAM,EAAE;QAC3C,IAAMC,KAAK,GAAGV,KAAK,CAACQ,SAAS,CAACG,GAAG,CAAC,UAAAC,IAAI;UAAA,OAAIA,IAAI,CAACC,IAAI;QAAA,EAAC;QACpD,IAAMC,YAAY,GAAGd,KAAK,CAACQ,SAAS,CAACG,GAAG,CAAC,UAAAC,IAAI;UAAA,OAAIA,IAAI,CAACG,MAAM;QAAA,EAAC;QAE7D,IAAMC,MAAM,GAAG;UACbC,KAAK,EAAE;YACLC,IAAI,EAAE;UACR,CAAC;UACDC,OAAO,EAAE;YACPC,OAAO,EAAE;UACX,CAAC;UACDC,KAAK,EAAE;YACLC,IAAI,EAAE,UAAU;YAChBC,IAAI,EAAEb;UACR,CAAC;UACDc,KAAK,EAAE;YACLF,IAAI,EAAE;UACR,CAAC;UACDG,MAAM,EAAE,CACN;YACEC,IAAI,EAAE,OAAO;YACbJ,IAAI,EAAE,MAAM;YACZC,IAAI,EAAET;UACR,CAAC;QAEL,CAAC;QAEDX,aAAa,CAACwB,SAAS,CAACX,MAAM,CAAC;MACjC;IACF,CAAC;IAEDnB,SAAS,CAAC,YAAM;MACdO,SAAS,CAAC,CAAC;IACb,CAAC,CAAC;IAEFN,KAAK,CAAC;MAAA,OAAME,KAAK,CAACQ,SAAS;IAAA,GAAE,YAAM;MACjCD,WAAW,CAAC,CAAC;IACf,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}