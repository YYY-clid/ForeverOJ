{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\nimport * as echarts from 'echarts';\nexport default {\n  __name: 'Chart',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var chartRef = ref(null);\n    var chartInstance = null;\n    var _initChart = function initChart() {\n      var countries = ['Finland', 'France', 'Germany', 'Iceland', 'Norway', 'Poland', 'Russia', 'United Kingdom'];\n      var datasetWithFilters = [];\n      var seriesList = [];\n      echarts.util.each(countries, function (country) {\n        var datasetId = 'dataset_' + country;\n        datasetWithFilters.push({\n          id: datasetId,\n          fromDatasetId: 'dataset_raw',\n          transform: {\n            type: 'filter',\n            config: {\n              and: [{\n                dimension: 'Year',\n                gte: 1950\n              }, {\n                dimension: 'Country',\n                '=': country\n              }]\n            }\n          }\n        });\n        seriesList.push({\n          type: 'line',\n          datasetId: datasetId,\n          showSymbol: false,\n          name: country,\n          endLabel: {\n            show: true,\n            formatter: function formatter(params) {\n              return params.value[3] + ': ' + params.value[0];\n            }\n          },\n          labelLayout: {\n            moveOverlap: 'shiftY'\n          },\n          emphasis: {\n            focus: 'series'\n          },\n          encode: {\n            x: 'Year',\n            y: 'Income',\n            label: ['Country', 'Income'],\n            itemName: 'Year',\n            tooltip: ['Income']\n          }\n        });\n      });\n      option = {\n        animationDuration: 10000,\n        dataset: [{\n          id: 'dataset_raw',\n          source: _rawData\n        }].concat(datasetWithFilters),\n        title: {\n          text: 'Income of Germany and France since 1950'\n        },\n        tooltip: {\n          order: 'valueDesc',\n          trigger: 'axis'\n        },\n        xAxis: {\n          type: 'category',\n          nameLocation: 'middle'\n        },\n        yAxis: {\n          name: 'Income'\n        },\n        grid: {\n          right: 140\n        },\n        series: seriesList\n      };\n      myChart.setOption(option);\n      onMounted(function () {\n        _initChart();\n        window.addEventListener('resize', resizeChart);\n      });\n      var resizeChart = function resizeChart() {\n        if (chartInstance) {\n          chartInstance.resize();\n        }\n      };\n      onBeforeUnmount(function () {\n        window.removeEventListener('resize', resizeChart);\n        if (chartInstance) {\n          chartInstance.dispose();\n        }\n      });\n    };\n    var __returned__ = {\n      chartRef: chartRef,\n      get chartInstance() {\n        return chartInstance;\n      },\n      set chartInstance(v) {\n        chartInstance = v;\n      },\n      initChart: _initChart,\n      ref: ref,\n      onMounted: onMounted,\n      onBeforeUnmount: onBeforeUnmount,\n      get echarts() {\n        return echarts;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onBeforeUnmount","echarts","chartRef","chartInstance","initChart","countries","datasetWithFilters","seriesList","util","each","country","datasetId","push","id","fromDatasetId","transform","type","config","and","dimension","gte","showSymbol","name","endLabel","show","formatter","params","value","labelLayout","moveOverlap","emphasis","focus","encode","x","y","label","itemName","tooltip","option","animationDuration","dataset","source","_rawData","concat","title","text","order","trigger","xAxis","nameLocation","yAxis","grid","right","series","myChart","setOption","window","addEventListener","resizeChart","resize","removeEventListener","dispose"],"sources":["/Users/ricardo/Documents/OnlineJudgePlatform/ForeverOJ/src/components/Chart.vue"],"sourcesContent":["<template>\n  <div ref=\"chartRef\" class=\"chart-container\"></div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\nimport * as echarts from 'echarts';\n\nconst chartRef = ref(null);\nlet chartInstance = null;\n\nconst initChart = () => {const countries = [\n    'Finland',\n    'France',\n    'Germany',\n    'Iceland',\n    'Norway',\n    'Poland',\n    'Russia',\n    'United Kingdom'\n  ];\n  const datasetWithFilters = [];\n  const seriesList = [];\n  echarts.util.each(countries, function (country) {\n    var datasetId = 'dataset_' + country;\n    datasetWithFilters.push({\n      id: datasetId,\n      fromDatasetId: 'dataset_raw',\n      transform: {\n        type: 'filter',\n        config: {\n          and: [\n            { dimension: 'Year', gte: 1950 },\n            { dimension: 'Country', '=': country }\n          ]\n        }\n      }\n    });\n    seriesList.push({\n      type: 'line',\n      datasetId: datasetId,\n      showSymbol: false,\n      name: country,\n      endLabel: {\n        show: true,\n        formatter: function (params) {\n          return params.value[3] + ': ' + params.value[0];\n        }\n      },\n      labelLayout: {\n        moveOverlap: 'shiftY'\n      },\n      emphasis: {\n        focus: 'series'\n      },\n      encode: {\n        x: 'Year',\n        y: 'Income',\n        label: ['Country', 'Income'],\n        itemName: 'Year',\n        tooltip: ['Income']\n      }\n    });\n  });\n  option = {\n    animationDuration: 10000,\n    dataset: [\n      {\n        id: 'dataset_raw',\n        source: _rawData\n      },\n      ...datasetWithFilters\n    ],\n    title: {\n      text: 'Income of Germany and France since 1950'\n    },\n    tooltip: {\n      order: 'valueDesc',\n      trigger: 'axis'\n    },\n    xAxis: {\n      type: 'category',\n      nameLocation: 'middle'\n    },\n    yAxis: {\n      name: 'Income'\n    },\n    grid: {\n      right: 140\n    },\n    series: seriesList\n  };\n  myChart.setOption(option);\n\nonMounted(() => {\n  initChart();\n  window.addEventListener('resize', resizeChart);\n});\n\nconst resizeChart = () => {\n  if (chartInstance) {\n    chartInstance.resize();\n  }\n};\n\nonBeforeUnmount(() => {\n  window.removeEventListener('resize', resizeChart);\n  if (chartInstance) {\n    chartInstance.dispose();\n  }\n});\n}\n</script>\n\n<style scoped>\n.chart-container {\n  width: 500px;\n  height: 400px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}