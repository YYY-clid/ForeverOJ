{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  ref: \"chartRef\",\n  \"class\": \"chart-container\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","_createElementBlock","_hoisted_1"],"sources":["/Users/ricardo/Documents/OnlineJudgePlatform/ForeverOJ/src/components/Chart.vue"],"sourcesContent":["<template>\n  <div ref=\"chartRef\" class=\"chart-container\"></div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\nimport * as echarts from 'echarts';\n\nconst chartRef = ref(null);\nlet chartInstance = null;\n\nconst initChart = () => {const countries = [\n    'Finland',\n    'France',\n    'Germany',\n    'Iceland',\n    'Norway',\n    'Poland',\n    'Russia',\n    'United Kingdom'\n  ];\n  const datasetWithFilters = [];\n  const seriesList = [];\n  echarts.util.each(countries, function (country) {\n    var datasetId = 'dataset_' + country;\n    datasetWithFilters.push({\n      id: datasetId,\n      fromDatasetId: 'dataset_raw',\n      transform: {\n        type: 'filter',\n        config: {\n          and: [\n            { dimension: 'Year', gte: 1950 },\n            { dimension: 'Country', '=': country }\n          ]\n        }\n      }\n    });\n    seriesList.push({\n      type: 'line',\n      datasetId: datasetId,\n      showSymbol: false,\n      name: country,\n      endLabel: {\n        show: true,\n        formatter: function (params) {\n          return params.value[3] + ': ' + params.value[0];\n        }\n      },\n      labelLayout: {\n        moveOverlap: 'shiftY'\n      },\n      emphasis: {\n        focus: 'series'\n      },\n      encode: {\n        x: 'Year',\n        y: 'Income',\n        label: ['Country', 'Income'],\n        itemName: 'Year',\n        tooltip: ['Income']\n      }\n    });\n  });\n  option = {\n    animationDuration: 10000,\n    dataset: [\n      {\n        id: 'dataset_raw',\n        source: _rawData\n      },\n      ...datasetWithFilters\n    ],\n    title: {\n      text: 'Income of Germany and France since 1950'\n    },\n    tooltip: {\n      order: 'valueDesc',\n      trigger: 'axis'\n    },\n    xAxis: {\n      type: 'category',\n      nameLocation: 'middle'\n    },\n    yAxis: {\n      name: 'Income'\n    },\n    grid: {\n      right: 140\n    },\n    series: seriesList\n  };\n  myChart.setOption(option);\n\nonMounted(() => {\n  initChart();\n  window.addEventListener('resize', resizeChart);\n});\n\nconst resizeChart = () => {\n  if (chartInstance) {\n    chartInstance.resize();\n  }\n};\n\nonBeforeUnmount(() => {\n  window.removeEventListener('resize', resizeChart);\n  if (chartInstance) {\n    chartInstance.dispose();\n  }\n});\n</script>\n\n<style scoped>\n.chart-container {\n  width: 500px;\n  height: 400px;\n}\n</style>"],"mappings":";;EACOA,GAAG,EAAC,UAAU;EAAC,SAAM;;;uBAA1BC,mBAAA,CAAkD,OAAlDC,UAAkD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}